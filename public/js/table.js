var app = angular.module('tableApp',[]);
var allFeeds = [],
    today =  new Date ,
    weekAgo =  new Date,
    thisWeek = [],
    thisWeekLocal = [],
    top5ThisWeek = [],
    membersDetails,
    weeklyFeeds = [],
    top5 = [],
    d=0,
    range = null;

app.run(function($http){
    var memId,
        flag = false,
        counter = 5,
        topWords = [],
        topKeys = [];
    
        weekAgo.setDate(today.getDate() - 7);
        for (i=0; i<8; i++){
            tempDate= new Date;
            top5ThisWeek.push(new Date(tempDate.setDate(today.getDate()-i)).toLocaleDateString());
        }

    $http.get('https://holoapp.herokuapp.com/getallmembers').success(function(allMembers){
        membersDetails= allMembers;
        console.log(membersDetails);
        for (i=0; i<5; i++){
            top5.push(allMembers[i]);
            // console.log(temp[i]);
        }
        top5.forEach(function(person){
            memId = person['_id'].id;
            tempObj = {};
            $http.get('https://holoapp.herokuapp.com/getFeedsByID/'+memId).success(function(memFeeds) {
                person.posts = memFeeds;
                memFeeds.forEach(function(posts){
                    topKeys.push(posts.key_word);
                    topWords.push(posts.max_str);
                })
                tempObj = _.countBy(topKeys);
                tempObj = objectWithValueSorted(tempObj);
                person.topKeys = tempObj;
                tempObj = _.countBy(topWords);
                tempObj = objectWithValueSorted(tempObj);
                person.topWords = tempObj;
                return;
            })
        });
    });
 

    function objectWithValueSorted(object) {
        var result = _.reduceRight(_.invert(_.invert(object)), function(current, val, key){    
                    current[key] = parseInt(val);
                    // console.log();
                    return current;
                },{});
        return(result);
    }

d3.request('http://holoapp.herokuapp.com/getFeedsFromToPerMember/2017-01-01/2017-01-16')
    .mimeType("application/json")
    .response(function(xhr) { return JSON.parse(xhr.responseText); })
    .get(function(error, dataset){

    d3.request('https://holoapp.herokuapp.com/getallmembers')
        .mimeType("application/json")
        .response(function(xhr) { return JSON.parse(xhr.responseText); })
        .get(function(error, mem){


            var margin = {top: 0, right: 0, bottom: 0, left: 0},
                // width = 990 - margin.left - margin.right,
                // cleanWidth = width + margin.left + margin.right,
                width = 1000 - margin.right - margin.left,
                height = dataset.length*40 - margin.top - margin.bottom,
                padding = 5,
                rowHeight = 30,
                membersWidth = 180;
            console.log(dataset);
            var person = {
                            "_id": {
                                "name": "טלי פלוסקוב",
                                "id": "177"
                            },
                            "totalLikes": 118,
                            "totalFeeds": 1,
                            "docs": [
                                {
                                    "_id": "588a445796b925f8ab0e4a91",
                                    "attachment": {
                                        "is_photo": true,
                                        "link:": "https://www.facebook.com/tali.ploskov/photos/a.666281420065987.1073741847.593286400698823/1490983704262417/?type=3",
                                        "name": "Photos from ‎Tali Ploskov - טלי פלוסקוב‎'s post",
                                        "picture": "https://scontent.xx.fbcdn.net/v/t1.0-0/s130x130/15873255_1490983704262417_3086307015277792185_n.jpg?oh=f40783929253079477b9ce13a3966883&oe=590672E5",
                                        "source": "https://scontent.xx.fbcdn.net/v/t1.0-9/15873255_1490983704262417_3086307015277792185_n.jpg?oh=e593a2e3129f543e943e258e7b3252f9&oe=58FF5A8E",
                                        "_id": "58904b4ea6514711006b8a64"
                                    },
                                    "feed": "/api/v1/facebook_feed/177/",
                                    "memberID": "177",
                                    "content": "טוב, לזה לא ציפיתי.\n\nקיבלתי פנייה דחופה מקבוצת קשישים, ניצולי שואה, מנהריה \nשביקשו להיפגש איתי.\n\nבדרך כלל, במפגשים מהסוג הזה, אני שומעת על הבעיות שעולות. וכאלה, לצערי, לא חסר.\n\nאבל הפעם- הם הזמינו אותי בשביל להגיד תודה.\n\nהם רצו להגיד לי תודה באופן אישי על החוק שהצלחתי להעביר לפני קצת יותר מחודש. חוק שהוסיף להם ולעוד כ- 6,600 ניצולי שואה, קצבה של כ- 1,300 ₪ בחודש.\n\nלא הצלחתי לעצור את הדמעות כשהם ניגשו אלי עם זרי הפרחים.\n\nשנמשיך לעשות ולהצליח.\n\nשלכם,\nטלי.",
                                    "content_snippet": "<p>טוב, לזה לא ציפיתי.</p>\n\n<p>קיבלתי פנייה דחופה מקבוצת קשישים, ניצולי <b>שואה</b>, מנהריה <br />שביקשו להיפגש איתי.</p>\n\n<p>בדרך כלל, במפגשים מהסוג הזה, אני שומעת על הבעיות שעולות. וכאלה, לצערי, לא חסר.</p>\n\n<p>אבל הפעם- הם הזמינו אותי בשביל להגיד תודה.</p>\n\n<p>הם רצו להגיד לי תודה באופן אישי על החוק שהצלחתי להעביר לפני קצת יותר מחודש. חוק שהוסיף להם ולעוד כ- 6,600 ניצולי <b>שואה</b>, קצבה של כ- 1,300 ₪ בחודש.</p>\n\n<p>לא הצלחתי לעצור את הדמעות כשהם ניגשו אלי עם זרי הפרחים.</p>\n\n<p>שנמשיך לעשות ולהצליח.</p>\n\n<p>שלכם,<br />טלי.</p>",
                                    "facebook_link": "https://www.facebook.com/593286400698823/posts/1490988984261889",
                                    "has_attachment": true,
                                    "id": 118952,
                                    "like_count": 118,
                                    "member": "טלי פלוסקוב",
                                    "party": "כולנו",
                                    "published": "2017-01-03T19:18:15",
                                    "max_str": "להגיד",
                                    "key_word": "שואה"
                                }
                            ]
                        };

            var rangeSvg =  d3.select("#RANGE").append("svg")
                .attr("width", width)
                .attr("height", rowHeight);
            
            var totalSvg =  d3.select("#TOTAL").append("svg")
                .attr("width", width)
                .attr("height", rowHeight);

            var D3TableSvg = d3.select("#D3Table").append("svg")
                .attr("width", width)
                .attr("height", height);

            var membersRow = d3.select("#membersRow").append("div")
                .attr("width", membersWidth)
                .attr("height", height);   
                  
            var color = d3.scale.linear().domain([
                    d3.min(dataset, function(p) {return d3.min(p.docs, function(d) {return d.like_count})})
                    ,
                    d3.max(dataset, function(p) {return d3.max(p.docs, function(d) {return d.like_count})})
                    ])
                .interpolate(d3.interpolateHcl)
                .range(['#FAF6DE','#FFF14F']);

            var parseTime = d3.timeParse("%B %d, %Y");
            var formatDay = d3.timeFormat("%A");

            var xScale = d3.scaleTime()
                .domain([new Date(2016, 12, 03),new Date(2016, 12, 15)])
                .range([0 + padding, width - padding]);              
                            
            var yScale = d3.scaleLinear()
                .domain([0, dataset.length])
                .range([0 + padding, height + padding]);
            
            var xAxis = d3.axisBottom(xScale);
                rangeSvg.append("g")
                    .attr("transform", "translate(0,10)")
                    .call(xAxis);

            var yAxis = d3.axisLeft(yScale);
                // D3TableSvg.append("g")
                //     .attr("transform", "translate(50,0)")
                //     .call(yAxis);

            tickArrY      = yScale.ticks(dataset.length),
            tickDistanceY = yScale(tickArrY[tickArrY.length - 1]) - yScale(tickArrY[tickArrY.length - 2]);
            
            tickArrX      = xScale.ticks(xScale.ticks().length),
            tickDistanceX = xScale(tickArrX[tickArrX.length - 1]) - xScale(tickArrX[tickArrX.length - 2]);
            
            var rect = D3TableSvg.selectAll("rect")
                .data(dataset) 
                .enter()
                .append("g")
                .selectAll("rect")
                .data(function(d, i, j){ d.index = i; return d.docs})
                .enter()
                .append("rect")
                // .attr("transform", "translate(0," +  + ")")
                .attr("x", function(d, i, j){return xScale(d3.timeDay(d3.isoParse(d.published)))})
                .attr("y", function(d, i, j){return yScale(d3.select(this.parentNode).datum().index)})
                .attr("fill",function(d){return color(d.like_count)})
                .attr("width", tickDistanceX)
                .attr("height", tickDistanceY)
                .style("stroke", "black")
                .style("stroke-width", "0.1");

            var title = D3TableSvg.selectAll("rect g")
                .data(dataset)  
                .enter()
                .append("g")
                .selectAll("text")
                .data(function(d, i, j){ d.index = i; return d.docs})
                .enter()
                .append("text")
                .attr("transform", "translate("+40+"," + 25 + ")")
                .attr("x", function(d, i, j){return xScale(d3.timeDay(d3.isoParse(d.published)))})
                .attr("y", function(d, i, j){return yScale(d3.select(this.parentNode).datum().index)})
                .attr("fill","red")
                .text(function(d){return d.key_word})
                .style("text-anchor", "middle")
                .style("font-size", function(d){if (d.key_word=="אנטישמיות")return '13px'; return '15px'});

            totalSvg.selectAll("svg")
                .data(dataset)
                .enter()
                .append("g")
                .selectAll("text")
                .data(function(d, i, j){ d.index = i; return d.docs})
                .enter()
                .append("text")
                .attr("x", function(d, i, j){return xScale(d3.isoParse(d.published))})
                .attr("y", "21")
                .attr("font-size", "1.8vw")
                .attr("fill",function(d){return color(d.like_count)})
                .html('&#x2721;');

            var li = membersRow.selectAll("li")
                .data(dataset)
                .enter()
                .append("li")
                .attr("class","list-group-item xxlPadding")
                .style("position", "absolute")
                .style("top", function(d){return (yScale(d.index)+"px")});
            
            var img = li.append("img")
                .each(function(d) {
                    var header = d3.select(this);
                    mem.forEach(function(key) {
                        if (key._id.id == d._id.id)
                            header.attr("src", key.pic);
                    });
                })
                .attr("id","sMemPic");
                
            li.append("span")
                .text(function(d){return (d._id.name+ "  ")});
                
            li.append("span")
                .attr("class","badge")
                .text(function(d){return d.totalFeeds});




            // var range = svg.append("rect").append("g")
            //             .attr("class", "axis axis--grid")
            //             .attr("transform", "translate(0," + 70 + ")")
            //             .call(d3.axisBottom(xScale)
            //                 .ticks(d3.timeDay, 1)
            //                 .tickSize(70)
            //                 .tickFormat(function() { return null; }))
            //           .selectAll(".tick")
            //             .classed("tick--minor", function(d) { console.log(d);return d.getMonth(); });

            //         svg.append("g")
            //             .attr("class", "axis axis--x")
            //             .attr("transform", "translate(0," + 70 + ")")
            //             .call(d3.axisBottom(xScale)
            //                 .ticks(d3.timeDay)
            //                 .tickPadding(1))
            //             .attr("text-anchor", null)
            //           .selectAll("text")
            //             .attr("x", 6);

              
                // svg.append("g").call(yAxis);
                // svg.append("g").call(yAxis);
            // x.domain([0, d3.max(dataSet, function(d,i) { return i+1; })]);
            // y.domain([0, d]);
            // console.log(d);
            // var xAxis = d3.axisBottom()
            //             .ticks(d3.max(data, function(d,i) { return i+1; }))
            //             .scale(x);

            // var yAxis = d3.axisLeft().ticks(50)
            //             .scale(y);

            // var canvas = d3.select("body").select("p")
            //             .insert("svg")
            //             .attr("width", width + margin.left+10 + margin.right)
            //             .attr("height", height + margin.top+10 + margin.bottom)
            //             .style("background", "EEEEEE")
            //             .append("g")
            //             .attr("transform", "translate(" + margin.left + "," + margin.top + ")")
            //             .call(yAxis);

            //     canvas.append("g")
            //             .attr("transform", "translate(8," + height + ")")
            //             .call(xAxis);

            // var div = d3.select("body").append("div")   
            //             .attr("class", "tooltip")               
            //             .style("opacity", 0);
                
            // var circle = canvas.selectAll("circle")
            //             .data(dataSet)
            //             .enter()
            //             .append("circle")
            //             .attr("r", 1)
            //             .attr("cx", function(ds, i){return(x(i));})
            //             .attr("cy", function(ds){return(y(ds.finalGrade));})
            //             .on("mouseover", function(d) {      
            //                 div.transition()        
            //                     .duration(200)      
            //                     .style("opacity", .9);      
            //                 div .html("<h6><b>"+d.firstName +" "+ d.lastName  + "</b></h6>" + "finalGrade: " + d.finalGrade)  
            //                     .style("left", (d3.event.pageX) + "px")     
            //                     .style("top", (d3.event.pageY - 28) + "px");    
            //                 })                  
            //             .on("mouseout", function(d) {       
            //                 div.transition()        
            //                     .duration(500)      
            //                     .style("opacity", 0);   
            //             })
            //             .attr("fill", function(ds){return(d3.interpolateMagma(Math.random()));})
            //             .attr("fill-opacity", function(ds, i){return(ds.finalGrade * 0.01)})
            //             .transition()
            //             .duration(1000)
            //             .attr("transform", "translate(10,0)")
            //             .transition()
            //             .duration(1000)
            //             .attr("r", 8);
            //Add lines to dots
            // var line = canvas.selectAll("div")
            //             .data(dataSet)
            //             .enter()
            //             .append("div")
            //             .class("stroke")
            //             .attr("x1", function(ds, i){return(x(i)+20);})
            //             .attr("y1", function(ds){return(y(ds.finalGrade)-10);})
            //             .attr("x2", function(ds, i){return(x(i)+20);})
            //             .attr("y2", 0);
    });

});

// TIMELINE

    // var margin = {top: 20, right: 0, bottom: 20, left: 00},
    //     width = 960 - margin.left - margin.right,
    //     height = 60 - margin.top - margin.bottom;

    // var x = d3.scaleTime()
    //     .domain([new Date(2013, 10, 1),new Date(2017, 1, 1)])
    //     .rangeRound([0, width]);

    // var svg = d3.select("#TIMELINE").append("svg")
    //     .attr("width", width + margin.left + margin.right)
    //     .attr("height", height + margin.top + margin.bottom)
    //   .append("g")
    //     .attr("transform", "translate(" + margin.left + "," + margin.top + ")");

    // svg.append("g")
    //     .attr("class", "axis axis--grid")
    //     .attr("transform", "translate(0," + height + ")")
    //     .call(d3.axisBottom(x)
    //         .ticks(d3.timeMonth, 1)
    //         .tickSize(-height)
    //         .tickFormat(function() { return null; }))
    //   .selectAll(".tick")
    //     .classed("tick--minor", function(d) { return d.getMonth(); });

    // svg.append("g")
    //     .attr("class", "axis axis--x")
    //     .attr("transform", "translate(0," + height + ")")
    //     .call(d3.axisBottom(x)
    //         .ticks(d3.timeYear)
    //         .tickPadding(1))
    //     .attr("text-anchor", null)
    //   .selectAll("text")
    //     .attr("x", 6);

    // svg.append("g")
    //     .attr("class", "brush") 
    //     .call(d3.brushX()
    //         .extent([[0, 0], [width, height]])
    //         .on("end", brushended));

    // function brushended() {
    //   if (!d3.event.sourceEvent) return; // Only transition after input.
    //   if (!d3.event.selection) return; // Ignore empty selections.
    //   var d0 = d3.event.selection.map(x.invert),
    //       d1 = d0.map(d3.timeWeek.round);
    //       range = {'start':d1[0], 'end': d1[1] };
    //       // today = range.start-8;
    //       // console.log(range);
    //   // If empty when rounded, use floor & ceil instead.
    //   if (d1[0] >= d1[1]) {
    //     d1[0] = d3.timeWeek.floor(d0[0]);
    //     d1[1] = d3.timeWeek.offset(d1[0]);
    //   }

    //   d3.select(this).transition().call(d3.event.target.move, d1.map(x));
    // }


});

app.controller('bodyTable', function ($scope, $http) {
     $scope.colorByLikes = function(likes){
        var length = 2500;
        var color = d3.scale.linear().domain([0,length])
        .interpolate(d3.interpolateHcl)
        .range(['#FFF103', '#FAF6D9']);
        
        if (likes > 2500) $scope.tempColor = '#FAF6D9';
        else $scope.tempColor = color(likes); 

        return $scope.tempColor;
    }

    // $http.get('https://holoapp.herokuapp.com/getallfeeds').success(function(data) {
    //     console.log(data);
    //     $scope.totalFeeds = data.length;
    //     var now= new Date();
    //     for (i=0; i<8; i++){
    //         weekAgo.setDate(now.getDate() - i);
    //         today=weekAgo;
    //          tempDate= today;

    //         d= today.getDay();
    //         var day='';

    //         switch(d) {
    //             case 0:
    //                 day="א'";
    //                 break;
    //             case 1:
    //                 day="ב'";
    //                 break;
    //             case 2:
    //                 day="ג'";
    //                 break;
    //             case 3:
    //                 day="ד'";
    //                 break;
    //             case 4:
    //                 day="ח";
    //                 break;
    //             case 5:
    //                 day="ו'";
    //                 break;
    //             case 6:
    //                 day="ש'";
    //                 break;
    //         }
    //         var validDate= + today.getDate() +'.'+ (today.getMonth() + 1)  ;
    //         var res={ 'full': day + "  "+ validDate,
    //                     'date': today.getFullYear()+"-"+("0" + (today.getMonth() + 1)).slice(-2)+"-"+today.getDate()
    //                 };
    //          thisWeek.push(res);
    //          thisWeekLocal.push(res);
    //     }
    //     for(feed in allFeeds){
    //         if(allFeeds[feed].published <= today.toISOString() && allFeeds[feed].published >= weekAgo.toISOString())
    //             weeklyFeeds.push(allFeeds[feed]);
    //     }
    // }); 

    // $http.get('https://holoapp.herokuapp.com/getFeedsFromTo/2017-01-01/2017-01-28').success(function(d){
    //     $scope.allFeeds=d;
    //     return ;
    // });

    // $http.get('https://holoapp.herokuapp.com/getAllMembers').success(function(d){
    //     $scope.members=d;
    //     $scope.totalMembers = d.length;
    //     return ;
    // });

    $scope.top5ThisWeek = top5ThisWeek;
    $scope.thisWeek = thisWeek;
    $scope.thisWeekLocal = thisWeekLocal;
    $scope.weeklyFeeds = weeklyFeeds;
    $scope.checkDate = function(x,y){
       temp= y.substring(0,10);
       res=0;
       if(temp==x){res=1;}
       else{res=-1;}
       if(temp==x)return 1;
       else return 0;
    };
   
    $scope.top5 = top5;
    function postedToday(day, posts){
        posts.forEach(function(post){
            if (post.published == day.toISOString())
                day.toISOString()
                return (true);
        })
        return(false);
    };
    $scope.infoPopup = function() {
        var popup = document.getElementById('myPopup');
        popup.classList.toggle('show');    
    }
   
});

