var app = angular.module('tableApp',[]);
var allFeeds = [],
    today =  new Date ,
    weekAgo =  new Date,
    thisWeek = [],
    thisWeekLocal = [],
    top5ThisWeek = [],
    membersDetails,
    weeklyFeeds = [],
    top5 = [],
    d=0,
    range = null;

app.run(function($http){
    var memId,
        flag = false,
        counter = 5,
        topWords = [],
        topKeys = [];
    
        weekAgo.setDate(today.getDate() - 7);
        for (i=0; i<8; i++){
            tempDate= new Date;
            top5ThisWeek.push(new Date(tempDate.setDate(today.getDate()-i)).toLocaleDateString());
        }

    $http.get('https://holoapp.herokuapp.com/getallmembers').success(function(allMembers){
        membersDetails= allMembers;
        // console.log(membersDetails);
        for (i=0; i<5; i++){
            top5.push(allMembers[i]);
            // console.log(temp[i]);
        }
        top5.forEach(function(person){
            memId = person['_id'].id;
            tempObj = {};
            $http.get('https://holoapp.herokuapp.com/getFeedsByID/'+memId).success(function(memFeeds) {
                person.posts = memFeeds;
                memFeeds.forEach(function(posts){
                    topKeys.push(posts.key_word);
                    topWords.push(posts.max_str);
                })
                tempObj = _.countBy(topKeys);
                tempObj = objectWithValueSorted(tempObj);
                person.topKeys = tempObj;
                tempObj = _.countBy(topWords);
                tempObj = objectWithValueSorted(tempObj);
                person.topWords = tempObj;
                return;
            })
        });
    });
 

    function objectWithValueSorted(object) {
        var result = _.reduceRight(_.invert(_.invert(object)), function(current, val, key){    
                    current[key] = parseInt(val);
                    return current;
                },{});
        return(result);
    }

    d3.request('http://holoapp.herokuapp.com/getFeedsFromToPerMember/2017-01-01/2017-01-16')
        .mimeType("application/json")
        .response(function(xhr) { return JSON.parse(xhr.responseText); })
        .get(function(error, dataset){

        d3.request('https://holoapp.herokuapp.com/getallmembers')
            .mimeType("application/json")
            .response(function(xhr) { return JSON.parse(xhr.responseText); })
            .get(function(error, mem){

                var margin = {top: 0, right: 0, bottom: 0, left: 0},
                    width = 1000 - margin.right - margin.left,
                    height = dataset.length*40 - margin.top - margin.bottom,
                    padding = 5,
                    rowHeight = 30,
                    membersWidth = 180;
                    
                var rangeSvg =  d3.select("#RANGE").append("svg")
                    .attr("width", width)
                    .attr("height", rowHeight);
                
                var totalSvg =  d3.select("#TOTAL").append("svg")
                    .attr("width", width)
                    .attr("height", rowHeight);

                var D3TableSvg = d3.select("#D3Table").append("svg")
                    .attr("width", width)
                    .attr("height", height);

                var membersRow = d3.select("#membersRow").append("div")
                    .attr("width", membersWidth)
                    .attr("height", height);   
                      
                var color = d3.scale.linear().domain([
                        d3.min(dataset, function(p) {return d3.min(p.docs, function(d) {return d.like_count})})
                        ,
                        d3.max(dataset, function(p) {return d3.max(p.docs, function(d) {return d.like_count})})
                        ])
                    .interpolate(d3.interpolateHcl)
                    .range(['#FAF6DE','#FFF14F']);

                var myFormatters ={
                   "decimal": ".",
                  "thousands": ",",
                  "grouping": [3],
                  "currency": ["$", ""],
                  "dateTime": "%a %b %e %X %Y",
                  "date": "%d.%m",
                  "time": "%H:%M:%S",
                  "periods": ["AM", "PM"],
                  "days": ["ראשון", "שני", "שלישי", "רביעי", "חמישי", "שישי", "שבת"],
                  "shortDays": ["א׳", "ב׳", "ג׳", "ד׳", "ה׳", "ו׳", "ש׳"],
                  "months": ["ינואר", "פברואר", "מרץ", "אפריל", "מאי", "יוני", "יולי", "אוגוסט", "ספטמבר", "אוטובר", "נובמבר", "דצמבר"],
                  "shortMonths": ["ינואר", "פברואר", "מרץ", "אפריל", "מאי", "יוני", "יולי", "אוגוסט", "ספטמבר", "אוטובר", "נובמבר", "דצמבר"]
                };

                d3.timeFormatDefaultLocale(myFormatters);
                var parseTime = d3.timeParse("%B %d, %Y");
                var formatDay = d3.timeFormat("%d/%m/%y");
                var formatHour = d3.timeFormat("%H:%M");

                var xScale = d3.scaleTime()
                    .domain([new Date(2016, 12, 01),new Date(2016, 12, 30)])
                    .rangeRound ([0 + padding, width - padding]);            
                
                var yScale = d3.scaleLinear()
                    .domain([0, dataset.length])
                    .range([0 + padding, height + padding]);
                
                var xAxis = d3.axisBottom(xScale);
                var yAxis = d3.axisLeft(yScale);
                   
                rangeSvg.append("g")
                    .attr("class", "lowerXaxis")
                    .attr("transform", "translate(0," + 30 + ")")
                    .call(d3.axisBottom(xScale)
                    .ticks(d3.timeHour, 1)
                    .tickSize(-5).tickFormat(function() { return null; }))
                    .selectAll(".tick")
                    .classed("tick--minor", function(d) {return d.getHours(); });

                rangeSvg.append("g")
                    .attr("class", "upperXaxis")
                    .attr("transform", "translate(0," + -1 + ")")
                    .call(xAxis
                        .ticks(d3.timeDay)
                        .tickPadding(1)
                        .tickSize(32).tickFormat(d3.timeFormat("%a %d.%m")))
                    .attr("text-anchor", "middle")      
                    .selectAll("text")
                    .attr("x", -20)
                    .attr("y", 10)
                    .attr("font-family", "Frank Ruhl Libre");
                
                var tickArrY      = yScale.ticks(dataset.length),
                    tickDistanceY = yScale(tickArrY[tickArrY.length - 1]) - yScale(tickArrY[tickArrY.length - 2]);
                    
                var t = d3.selectAll(".upperXaxis .tick").size();
                var tickDistanceX = width/(t-1);
                
                // console.log(t-1);
                if (t > 30 ) {
                    d3.selectAll(".lowerXaxis").style("display","none");
                    d3.selectAll(".upperXaxis text").style("display","none");
                } 
                var div = d3.select("#D3Box").append("div")   
                            .attr("class", "tooltip media");
                
                var footerBoard = d3.select("#footerBoard");3
                                    

                var rect = D3TableSvg.selectAll("rect")
                    .data(dataset) 
                    .enter()
                    .append("g")
                    .selectAll("rect")
                    .data(function(d, i, j){d.index = i; return d.docs})
                    .enter()
                    .append("rect")
                    .attr("x", function(d, i, j){return xScale(d3.timeDay(d3.isoParse(d.published)))})
                    .attr("y", function(d, i, j){return yScale(d3.select(this.parentNode).datum().index)})
                    .attr("fill",function(d){return color(d.like_count)})
                    .attr("width", tickDistanceX)
                    .attr("height", tickDistanceY)
                    .style("stroke", "black")
                    .style("stroke-width", function(d){ if (t>8) return 0; else return 0.1;})
                    .each(function(d) {
                        var header = d3.select(this);
                        mem.forEach(function(key) {
                            if (key._id.id==d.memberID ){
                                d.memPic = key.pic;
                            }
                        });
                    })
                    .on("click", function(d,i,j) {      
                        d3.select("#top5Board").style("class", "hidden").style("margin-top", "100px");
                        footerBoard.transition()
                            .duration(500) 
                            .attr("class", "footerBoard show") 
                            .style("opacity", .9);
                        footerBoard
                            .html("<button type='button' class='pull-left close' id='close' style='padding:7px;'><span>&times;</span></button>"+
                                    "<div class='pull-left snippetHeader'><span class='glyphicon glyphicon-thumbs-up' style='padding:10px;'></span>"+d.like_count +
                                    "<a href='"+d.attachment["link:"]+"'><span class='glyphicon glyphicon-paperclip' style='padding:10px;'> קישור</span></a>"+
                                    "<a href='"+d.attachment.picture+"'><span class='glyphicon glyphicon-picture' style='padding:10px;'> תמונה</span></a></div>"+
                                    "<div class='media-right'><a href='"+d.memPic+"'><img class='media-object' id='mMemPic' src='"+d.memPic+"' alt='"+d.member+"'></a>"+
                                    "</div><div class='media-body'><h3 class='media-heading'>"+d.member+"<small> ("+d.party+") </small></h3>"+
                                    "<h5><span>"+formatDay(d3.isoParse(d.published))+"</span> בשעה: <span>"+formatHour(d3.isoParse(d.published))+"</span></h5>"+
                                    "<blockquote class='blockquote-reverse'>"+
                                    "<span style='font-size: 40px;'>״</span>"+d.content_snippet+"<span style='font-size: 40px;'>״</span>"+
                                    "</blockquote>");
                            d3.select("#close")
                            .on("click", function(d){
                                footerBoard.attr("class", "hidden")
                                d3.select("#top5Board").attr("class", "show").style("margin-top", "0px");
                            })
                        })
                    .on("mouseover", function(d,i,j) {      
                        var tempRect = d3.select(this);
                        if(t>8) tempRect.style("stroke-width","0.1");
                        div.transition()
                            .duration(500)  
                            .style("opacity", .9)
                            .style("display", "block");
                        div .html("<div class='media-right'><a href='#'><img class='media-object' id='mMemPic' src="+"'"+d.memPic+"'"+ " alt='"+d.member+"'></a>"+
                                "</div><div class='media-body'><h4 class='media-heading'>"+d.member+"<small> ("+d.party+") </small></h4>"+
                                "<h6><span>"+formatDay(d3.isoParse(d.published))+"</span> בשעה: <span>"+formatHour(d3.isoParse(d.published))+"</span></h6>"+
                                "<blockquote class="+'blockquote-reverse'+">"+
                                "<p>ניצל <span class='miriam' style='color:red;'>"+d.key_word+"</span> כדי לדבר על ה<b>׳"+d.max_str+"׳</b></br><span style='color:blue;' class='glyphicon glyphicon-thumbs-up'> </span> "+ d.like_count +" לייקים."+
                                "</blockquote>")
                            .style("left", (d3.event.pageX-100) + "px")          
                            .style("top", (d3.event.pageY) + "px")
                            .append("img")
                            .attr("src", "images/star60.png")
                            .attr("class", "star")
                            .attr("id", "toolTipStar");
                        rangeSvg.append("line")
                            .attr("stroke-width", "2")
                            .attr("stroke","#000")
                            .attr("x1", xScale(d3.timeHour(d3.isoParse(d.published))))
                            .attr("x2", xScale(d3.timeHour(d3.isoParse(d.published))))
                            .attr("y1", "20")
                            .attr("y2", "30")
                            .attr("id", "secret");
                        })
                    .on("mouseout", function(d) {       
                        var tempRect = d3.select(this);
                        if(t>8) tempRect.style("stroke-width","0");
                        div.transition()
                            .duration(500)  
                            .style("opacity", 0)
                            .style("display", "none");
                        rangeSvg.selectAll("#secret").remove();
                    });
                
                
                var title = D3TableSvg.selectAll("rect g")
                    .data(dataset)  
                    .enter()
                    .append("g")
                    .selectAll("text")
                    .data(function(d, i, j){ d.index = i; return d.docs})
                    .enter()
                    .append("text")
                    .attr("transform", "translate(0,25)")
                    .attr("x", function(d, i, j){return (xScale(d3.timeDay(d3.isoParse(d.published)))+tickDistanceX/2)})
                    .attr("y", function(d, i, j){return yScale(d3.select(this.parentNode).datum().index)})
                    .attr("fill","red")
                    .attr("class", "miriam")
                    .style("display", function(d){ if (t>8) return "none";})
                    .style("text-anchor", "middle")
                    .style("font-size", function(d){if (d.key_word=="אנטישמיות")return '13px'; return '15px'})
                    .text(function(d){return d.key_word});

                totalSvg.selectAll("svg")
                    .data(dataset)
                    .enter()
                    .append("g")
                    .selectAll("text")
                    .data(function(d, i, j){ d.index = i; return d.docs})
                    .enter()
                    .append("text")
                    .attr("x", function(d, i, j){return xScale(d3.isoParse(d.published))})
                    .attr("y", "21")
                    .attr("font-size", "1.8vw")
                    .attr("fill",function(d){return color(d.like_count)})
                    .html('&#x2721;');

                d3.select("#TOTALttl")
                    .append("span")
                    .attr("class", "badge")
                    .text(d3.sum(dataset, function(d) {return d.totalFeeds }))
               
                var li = membersRow.selectAll("li")
                    .data(dataset)
                    .enter()
                    .append("li")
                    .attr("class","list-group-item xxlPadding")
                    .style("position", "absolute")
                    .style("top", function(d){return (yScale(d.index)+"px")});
                
                var img = li.append("img")
                    .each(function(d) {
                        var header = d3.select(this);
                        mem.forEach(function(key) {
                            if (key._id.id == d._id.id){
                                header.attr("src", key.pic)
                                d._id.pic = key.pic;
                            }
                        });
                    })
                    .attr("id","sMemPic");
                    
                li.append("span")
                    .text(function(d){return (d._id.name+ "  ")});
                    
                li.append("span")
                    .attr("class","badge")
                    .text(function(d){return d.totalFeeds});   
        
                

        });//End 2nd request
    });//End 1st request
    

    // TIMELINE

    var margin = {top: 20, right: 0, bottom: 20, left: 00},
        width = 960 - margin.left - margin.right,
        height = 60 - margin.top - margin.bottom;

    var x = d3.scaleTime()
        .domain([new Date(2013, 10, 1),new Date(2017, 1, 1)])
        .rangeRound([0, width]);

    var svg = d3.select("#TIMELINE").append("svg")
        .attr("width", width + margin.left + margin.right)
        .attr("height", height + margin.top + margin.bottom)
      .append("g")
        .attr("transform", "translate(" + margin.left + "," + margin.top + ")");

    svg.append("g")
        .attr("class", "axis axis--grid")
        .attr("transform", "translate(0," + height + ")")
        .call(d3.axisBottom(x)
            .ticks(d3.timeMonth, 1)
            .tickSize(-height)
            .tickFormat(function() { return null; }))
      .selectAll(".tick")
        .classed("tick--minor", function(d) { return d.getMonth(); });

    svg.append("g")
        .attr("class", "axis axis--x")
        .attr("transform", "translate(0," + height + ")")
        .call(d3.axisBottom(x)
            .ticks(d3.timeYear)
            .tickPadding(1))
        .attr("text-anchor", null)
      .selectAll("text")
        .attr("x", 6);

    svg.append("g")
        .attr("class", "brush") 
        .call(d3.brushX()
            .extent([[0, 0], [width, height]])
            .on("end", brushended));

    function brushended() {
      if (!d3.event.sourceEvent) return; // Only transition after input.
      if (!d3.event.selection) return; // Ignore empty selections.
      var d0 = d3.event.selection.map(x.invert),
          d1 = d0.map(d3.timeWeek.round);
          range = {'start':d1[0], 'end': d1[1] };
          // today = range.start-8;
          // console.log(range);
      // If empty when rounded, use floor & ceil instead.
      if (d1[0] >= d1[1]) {
        d1[0] = d3.timeWeek.floor(d0[0]);
        d1[1] = d3.timeWeek.offset(d1[0]);
      }

      d3.select(this).transition().call(d3.event.target.move, d1.map(x));
    }

});//End AppRun

app.controller('bodyTable', function ($scope, $http) {
    // $http.get('https://holoapp.herokuapp.com/getFeedsFromTo/2017-01-01/2017-01-28').success(function(d){
    //     $scope.allFeeds=d;
    //     return ;
    // });

    // $http.get('https://holoapp.herokuapp.com/getAllMembers').success(function(d){
    //     $scope.members=d;
    //     $scope.totalMembers = d.length;
    //     return ;
    // });
    $scope.scrollToAnchor = function (aid){
        var aTag = $("a[name='"+ aid +"']");
        // if(aid=='goDown')
        $('html,body').animate({scrollTop: aTag.offset().top},'slow');
    }
    $scope.showAbout = function(){
        d3.select("#top5Board").style("class", "hidden").style("margin-top", "100px");
        var footerBoard = d3.select("#footerBoard");
        footerBoard.transition()
            .duration(500) 
            .attr("class", "footerBoard show") 
            .style("opacity", .9);
        footerBoard
            .html("<button type='button' class='pull-left close' id='close' style='padding:7px;'><span>&times;</span></button>"+
                    "<div class='media-right'><img class='media-object' id='shenkar' src='images/logo.jpg' alt='shenkar'></a>"+
                    "<blockquote class='blockquote-reverse'>"+
                    "<h4><span class='miriam' style='color:red;'>״ניצול שואה״ </span><small>פרויקט במסגרת קורס המעבדה הבינתחומית</small></h4>"+
                    "<p>מטרת הפרויקט הינה לחשוף את ״ניצול השואה״ של חברי הכנסת בהקשרים שונים במדיה החברתית.</p>"+
                    "<p> פרויקט זה נוצר במסגרת שיתוף פעולה בין המחלקה לתקשורת חזותית לבין המחלקה להנדסת תוכנה בשנקר.</p>"+
                    "<h5><u>עיצוב:</u><span style='color:red;'> איתי</span></5>"+
                    "<h5><u>תכנות:</u><span style='color:red;'> דוד אביגד , עינבר תקדים</span></5>"+
                    "</blockquote>");
            d3.select("#close")
            .on("click", function(d){
                footerBoard.attr("class", "hidden")
                d3.select("#top5Board").attr("class", "show").style("margin-top", "0px");
            })
    }
    $scope.top5ThisWeek = top5ThisWeek;
    $scope.thisWeek = thisWeek;
    $scope.thisWeekLocal = thisWeekLocal;
    $scope.top5 = top5;
});

